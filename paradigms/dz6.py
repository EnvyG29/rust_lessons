from random import randint


def сортировка_слиянием(список: list):
    if len(список) == 1:
        return список

    середина = len(список) // 2
    левая = список[:середина]
    правая = список[середина:]

    return слияние(сортировка_слиянием(левая), сортировка_слиянием(правая))


def слияние(список_один: list, список_два: list) -> list:
    итоговый_список: list = list()
    индекс_первого_списка: int = 0
    индекс_второго_списка: int = 0

    while индекс_первого_списка < len(список_один) and индекс_второго_списка < len(список_два):
        if список_один[индекс_первого_списка] < список_два[индекс_второго_списка]:
            итоговый_список.append(список_один[индекс_первого_списка])
            индекс_первого_списка += 1
        else:
            итоговый_список.append(список_два[индекс_второго_списка])
            индекс_второго_списка += 1

    for и in range(индекс_первого_списка, len(список_один)):
        итоговый_список.append(список_один[и])

    for и in range(индекс_второго_списка, len(список_два)):
        итоговый_список.append(список_два[и])
        
    return итоговый_список
    

def бинарный_поиск(искомое: int, коллекция: list|tuple) -> int:
    начало = 0
    конец = len(коллекция) - 1

    while начало <= конец:
        середина = (начало + конец) // 2
        значение_из_середины = коллекция[середина]

        if искомое == значение_из_середины:
            return середина
        elif искомое < значение_из_середины:
            конец = середина - 1
        else:
            начало = середина + 1

    return -1
        


отсортированный_список: list = сортировка_слиянием([randint(-10, 10) for и in range(10)])
print(отсортированный_список)
что_ищем = int(input(">>> "))

print(бинарный_поиск(что_ищем, отсортированный_список))

